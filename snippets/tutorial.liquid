{% comment %} These are the types of varibales we can work with in shopify {% endcomment %}

{% comment %} String {% endcomment %}
 {%  assign my_string = "Hello world" %}
 {{ my_string }}, This string has {{ my_string.size }} characters
<br>
 {% comment %} numbers {% endcomment %}
  {%  assign my_number = 123 %}
  {% assign my_floating_point = 123.5 %}
{{ my_number }} , {{ my_floating_point }}
<br>
{% comment %} boolean {% endcomment %}
 {%  assign my_boolean = true %}
 {{ my_boolean }}

 <br>
 {% comment %} nil or null {% endcomment %}
  {% assign my_nil = null %}
  {{ my_nil }}
  
  {% comment %} conditional: As undefine_variable doesn't exist, it will show the message {% endcomment %}
   {% if undefine_variable == nil %}
     <p>Undefined variable is equal to nil</p>
   {% endif %}

   <br>

   {% comment %} Array {% endcomment %}
   the array has {{  product.tags.size }}  elements {% comment %} With this we can know the quantity of elements on a array or the number of chars on a string {% endcomment %}
   <br>
  {% comment %} loops {% endcomment %}
   {% for tag in product.tags %}
     {{ tag }} <br>
   {% endfor %}

   {% comment %} Objects {% endcomment %}
    <p>{{ product.title }}</p>

    {% comment %} Another way declare variables is with capture, everything between the tags will be the content of the variable, this is useful to render shopify varibales merged with html {% endcomment %}

    {% capture html %}
      <div> 
        <p> hello {{ product.title }}</p>
      </div>
    {% endcapture %}

    {{ html }}

    {% assign my_variable = 9 %}
    {% assign my_string_variable = 'hello' %}

    {% if my_variable > 10 %}
      <p> my_variable is greater than 10 </p>

      {% assign my_nested_variable = 20 %}
      <p> {{ my_nested_variable }}</p>

      {% elsif my_variable > 5 %}
        <p>my_varable is greater than 5</p>

        {% elsif my_variable > 3 %}
        <p>my_varable is greater than 3</p>
        
      {% else %}
        <p>my_variable not greater than 10 </p>
    {% endif %}

    {% if my_variable < 10 %}
      <p> my_variable is less than 10</p>
    {% endif %}

    {% if my_variable == 10 %}
      <p> my_variable is equal to 10 </p>
    {% endif %}

    {% if my_variable >= 10 %}
      <p> my_varibale is greater than or equal to 10 </p>
    {% endif %}

     {% if my_variable <= 10 %}
      <p> my_varibale is less than or equal to 10 </p>
    {% endif %}

    {% if my_string_variable == 'hello' %}
      <p> My string is hello</p>
    {% endif %}

    {% if my_string_variable != 'hello' %}
      <p> My string is not hello</p>
    {% endif %}

    {% comment %} contains operator ca be use to check if there is a subtext inside a string or an element in an array{% endcomment %}
    <p><b>{{ product.title }}</b></p>
    <p>{{ product.tags }}</p>

    {% if product.title contains 'Snowboard' %}
      <p> this is a Snowboard </p>
    {% endif %}

    {% if product.tags contains 'Winter' %}
      <p> This is a winter product </p>
    {% endif %}

    {% comment %} to negate contains or any if, instead of using the ! symbol we use unless {% endcomment %}

    {% unless product.tags contains "Premium" %}
      <p> This product doesn't contain the premium tag </p>
      {% else %}
        <p> This product contains the premium tag </p>
    {% endunless %}

    {% unless my_variable <= 10 %}
      <p> my_variable is greater than 10 </p>
      {% else %}
        <p> my variable is not greater than 10 </p>
    {% endunless %}

    {% comment %} logical operators, note: the prices in shopify are save in cents {% endcomment %}

    {% if product.title contains "Snowboard" and product.price < 65000 %}
      <p> This is an affordable snowboard </p>
    {% endif %}

    {% if product.title contains "Snowboard" or product.price < 65000 %}
      <p> This is an affordable snowboard </p>
    {% endif %}

    {% assign is_a_snowboard = false %}
    {% if product.title contains "Snowboard" or product.type == "Snowboard" %}
      {% assign is_a_snowboard = true %}
    {% endif %}

    {% if is_a_snowboard and product.price < 70000 %}
      <p> This is an affordable snowboard in a nested condition </p>
    {% endif %}